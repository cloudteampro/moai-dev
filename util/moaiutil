#!/usr/bin/env bash 
INVOKE_DIR=$(pwd)
MOAI_SDK_HOME=$(cd $(dirname "${0}")/../ && pwd)
MOAI_SDK_BIN=$MOAI_SDK_HOME/util/moai
MOAI_CMD=${1}

# if we're missing moai, inform the user that they need to build it first
if ! [ -f "$MOAI_SDK_BIN" ] 
then
    echo "Cannot find a local moai binary - it needs to be built first."
    case `uname` in
    Darwin*)
      bin_build_script="bin/build-osx.sh"
      ;;
    Linux*)
      bin_build_script="bin/build-linux.sh"
      ;;
    *)
      bin_build_script=""
      ;;
    esac

    if [ -e $bin_build_script ] 
    then
        echo "Will use the $bin_build_script to build the util/moai binary for use by moaiutil..."
        $bin_build_script
    else
        echo "Could not determine which script to use to build util/moai binary .. aborting"
        exit 1
    fi

    echo "Need to confirm local moai binary was built ..."
    if [ -f $MOAI_SDK_BIN ]
    then
        echo "Continuing moaiutil execution..."
    else
        echo "Something went wrong with building util/moai .. exiting!"
        exit 1
    fi
fi

# call moaiutil.lua
shift
set $INVOKE_DIR $MOAI_SDK_HOME $MOAI_CMD $@

echo    "         MOAI SDK location: $MOAI_SDK_HOME"
echo    "      MOAI binary location: $MOAI_SDK_BIN"
echo -n "moaiutil toolbelt location: " && which moaiutil 
echo

pushd $MOAI_SDK_HOME/util > /dev/null
$MOAI_SDK_BIN moaiutil.lua $@
popd > /dev/null
